<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>pro.jiefzz.ejoker</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>demo</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<version.ejoker>3.0.2-SNAPSHOT</version.ejoker>

		<useQuasar>0</useQuasar> <!-- 此处定义变量，可让命令传入 -DuseQuasar=? -->
	</properties>

	<!-- 不再使用，留作参考 <repositories> <repository> <id>minimal-maven-repository</id> 
		<url>file:///${project.basedir}/minimal-maven-repository</url> <layout>default</layout> 
		<releases> <enabled>true</enabled> </releases> <snapshots> <enabled>true</enabled> 
		</snapshots> </repository> </repositories> -->

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.8.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.8.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.8.2</version>
		</dependency>

		<dependency>
			<groupId>co.paralleluniverse</groupId>
			<artifactId>quasar-core</artifactId>
			<version>0.7.10</version>
			<classifier>jdk8</classifier>
		</dependency>

		<!-- 用于SpringMVC返回json格式的response -->
		<!-- <dependency> <groupId>com.fasterxml.jackson.core</groupId> <artifactId>jackson-core</artifactId> 
			<version>${version.jackson}</version> </dependency> <dependency> <groupId>com.fasterxml.jackson.core</groupId> 
			<artifactId>jackson-databind</artifactId> <version>${version.jackson}</version> 
			</dependency> -->
		<!-- 用于SpringMVC返回json格式的response -->

		<!-- https://mvnrepository.com/artifact/org.mongodb/mongo-java-driver -->
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>3.8.1</version>
		</dependency>

		<dependency>
			<groupId>com.github.kimffy24</groupId>
			<artifactId>ejoker-support-bootstrap</artifactId>
			<version>${version.ejoker}</version>
		</dependency>
		<dependency>
			<groupId>com.github.kimffy24</groupId>
			<artifactId>ejoker-mq-rocketmq</artifactId>
			<version>${version.ejoker}</version>
		</dependency>
		<dependency>
			<groupId>com.github.kimffy24</groupId>
			<artifactId>ejoker-mq-javaqueue</artifactId>
			<version>${version.ejoker}</version>
		</dependency>

	</dependencies>


	<build>

		<plugins>

			<plugin>
				<groupId>org.eclipse.m2e</groupId>
				<artifactId>lifecycle-mapping</artifactId>
				<version>1.0.0</version>
				<configuration>
					<lifecycleMappingMetadata>
						<pluginExecutions>
							<pluginExecution>
								<pluginExecutionFilter>
									<groupId>org.apache.maven.plugins</groupId>
									<artifactId>maven-dependency-plugin</artifactId>
									<versionRange>[2.8,)</versionRange>
									<goals>
										<goal>properties</goal>
									</goals>
								</pluginExecutionFilter>
								<action>
									<ignore />
								</action>
							</pluginExecution>
						</pluginExecutions>
					</lifecycleMappingMetadata>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>getClasspathFilenames</id>
						<goals>
							<goal>properties</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version><!--$NO-MVN-MAN-VER$ -->
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>1.0b3</version>
						<exclusions>
							<exclusion>
								<groupId>ant</groupId>
								<artifactId>ant</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.8.1</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>instrument-classes</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="useQuasar = ${useQuasar}" />
								<property name="ant_classpath"
									refid="maven.dependency.classpath" />

								<!--这句很重要，ant会加载antcontrib.properties中定义的标签 -->
								<taskdef
									resource="net/sf/antcontrib/antcontrib.properties"
									classpathref="maven.runtime.classpath" />

								<if>
									<!-- 取maven参数 -DuseQuasar -->
									<equals arg1="${useQuasar}" arg2="1" />
									<then>
										<echo message="Doing instrument... " />

										<!-- 解压ejoker相关包到指定目录，并在扫描时带上 -->
										<mkdir dir="${project.build.directory}/elibx" />
										<unzip
											src="${maven.dependency.pro.jk.ejoker-common.jar.path}"
											dest="${project.build.directory}/elibx" />
										<unzip
											src="${maven.dependency.pro.jk.ejoker-core.jar.path}"
											dest="${project.build.directory}/elibx" />
										<delete file="${project.build.directory}/elibx/co" />
										<delete
											file="${project.build.directory}/elibx/META-INF" />

										<taskdef name="scanSuspendables"
											classname="co.paralleluniverse.fibers.instrument.SuspendablesScanner"
											classpath="${ant_classpath}" />
										<scanSuspendables auto="true" append="true"
											supersFile="${project.build.directory}/classes/META-INF/suspendable-supers"
											suspendablesFile="${project.build.directory}/classes/META-INF/suspendables">
											<fileset dir="${project.build.directory}/classes/"
												includes="**/*.class" />
											<fileset dir="${project.build.directory}/elibx"
												includes="**/*.class" />
										</scanSuspendables>

									</then>
									<else />
								</if>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<!-- Run with "mvn -Dmaven.test.skip=true clean compile exec:exec" -->
				<configuration>
					<mainClass>pro.jiefzz.demo.ejoker.transfer.boot.over_javaqueue.quasar.TransferAppQuasar</mainClass>
					<workingDirectory>target/classes</workingDirectory>
					<executable>java</executable>
					<arguments>
						<argument>-Dco.paralleluniverse.fibers.verifyInstrumentation=true</argument>
						<argument>-Dco.paralleluniverse.fibers.detectRunawayFibers=true</argument>
						<argument>-javaagent:${co.paralleluniverse:quasar-core:jar:jdk8}</argument>
						<argument>-classpath</argument>
						<classpath />
						<argument>pro.jiefzz.demo.ejoker.transfer.boot.over_javaqueue.quasar.TransferAppQuasar</argument>
					</arguments>
				</configuration>
			</plugin>

			<plugin>
				<!-- package a fat jar -->
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>pro.jiefzz.demo.ejoker.transfer.boot.over_javaqueue.TransferAppMain</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
